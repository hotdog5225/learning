0.1	Introduction to these tutorials	https://www.learncpp.com/cpp-tutorial/introduction-to-these-tutorials/
0.2	Introduction to programming languages	https://www.learncpp.com/cpp-tutorial/introduction-to-programming-languages/
0.3	Introduction to C/C++	https://www.learncpp.com/cpp-tutorial/introduction-to-cplusplus/
0.4	Introduction to C++ development	https://www.learncpp.com/cpp-tutorial/introduction-to-cpp-development/
0.5	Introduction to the compiler, linker, and libraries	https://www.learncpp.com/cpp-tutorial/introduction-to-the-compiler-linker-and-libraries/
0.6	Installing an Integrated Development Environment (IDE)	https://www.learncpp.com/cpp-tutorial/installing-an-integrated-development-environment-ide/
0.7	Compiling your first program	https://www.learncpp.com/cpp-tutorial/writing-your-first-program/
0.8	A few common C++ problems	https://www.learncpp.com/cpp-tutorial/a-few-common-cpp-problems/
0.9	Configuring your compiler: Build configurations	https://www.learncpp.com/cpp-tutorial/configuring-your-compiler-build-configurations/
0.10	Configuring your compiler: Compiler extensions	https://www.learncpp.com/cpp-tutorial/configuring-your-compiler-compiler-extensions/
0.11	Configuring your compiler: Warning and error levels	https://www.learncpp.com/cpp-tutorial/configuring-your-compiler-warning-and-error-levels/
0.12	Configuring your compiler: Choosing a language standard	https://www.learncpp.com/cpp-tutorial/configuring-your-compiler-choosing-a-language-standard/
1.1	Statements and the structure of a program	https://www.learncpp.com/cpp-tutorial/statements-and-the-structure-of-a-program/
1.2	Comments	https://www.learncpp.com/cpp-tutorial/comments/
1.3	Introduction to objects and variables	https://www.learncpp.com/cpp-tutorial/introduction-to-objects-and-variables/
1.4	Variable assignment and initialization	https://www.learncpp.com/cpp-tutorial/variable-assignment-and-initialization/
1.5	Introduction to iostream: cout, cin, and endl	https://www.learncpp.com/cpp-tutorial/introduction-to-iostream-cout-cin-and-endl/
1.6	Uninitialized variables and undefined behavior	https://www.learncpp.com/cpp-tutorial/uninitialized-variables-and-undefined-behavior/
1.7	Keywords and naming identifiers	https://www.learncpp.com/cpp-tutorial/keywords-and-naming-identifiers/
1.8	Whitespace and basic formatting	https://www.learncpp.com/cpp-tutorial/whitespace-and-basic-formatting/
1.9	Introduction to literals and operators	https://www.learncpp.com/cpp-tutorial/introduction-to-literals-and-operators/
1.10	Introduction to expressions	https://www.learncpp.com/cpp-tutorial/introduction-to-expressions/
1.11	Developing your first program	https://www.learncpp.com/cpp-tutorial/developing-your-first-program/
1.x	Chapter 1 summary and quiz	https://www.learncpp.com/cpp-tutorial/chapter-1-summary-and-quiz/
2.1	Introduction to functions	https://www.learncpp.com/cpp-tutorial/introduction-to-functions/
2.2	Function return values	https://www.learncpp.com/cpp-tutorial/function-return-values/
2.3	Introduction to function parameters and arguments	https://www.learncpp.com/cpp-tutorial/introduction-to-function-parameters-and-arguments/
2.4	Introduction to local scope	https://www.learncpp.com/cpp-tutorial/introduction-to-local-scope/
2.5	Why functions are useful, and how to use them effectively	https://www.learncpp.com/cpp-tutorial/why-functions-are-useful-and-how-to-use-them-effectively/
2.6	Forward declarations and definitions	https://www.learncpp.com/cpp-tutorial/forward-declarations/
2.7	Programs with multiple code files	https://www.learncpp.com/cpp-tutorial/programs-with-multiple-code-files/
2.8	Naming collisions and an introduction to namespaces	https://www.learncpp.com/cpp-tutorial/2-9-naming-collisions-and-an-introduction-to-namespaces/
2.9	Introduction to the preprocessor	https://www.learncpp.com/cpp-tutorial/introduction-to-the-preprocessor/
2.10	Header files	https://www.learncpp.com/cpp-tutorial/header-files/
2.11	Header guards	https://www.learncpp.com/cpp-tutorial/header-guards/
2.12	How to design your first programs	https://www.learncpp.com/cpp-tutorial/how-to-design-your-first-programs/
2.x	Chapter 2 summary and quiz	https://www.learncpp.com/cpp-tutorial/chapter-2-summary-and-quiz/
3.1	Syntax and semantic errors	https://www.learncpp.com/cpp-tutorial/syntax-and-semantic-errors/
3.2	The debugging process	https://www.learncpp.com/cpp-tutorial/the-debugging-process/
3.3	A strategy for debugging	https://www.learncpp.com/cpp-tutorial/a-strategy-for-debugging/
3.4	Basic debugging tactics	https://www.learncpp.com/cpp-tutorial/basic-debugging-tactics/
3.5	More debugging tactics	https://www.learncpp.com/cpp-tutorial/more-debugging-tactics/
3.6	Using an integrated debugger: Stepping	https://www.learncpp.com/cpp-tutorial/using-an-integrated-debugger-stepping/
3.7	Using an integrated debugger: Running and breakpoints	https://www.learncpp.com/cpp-tutorial/using-an-integrated-debugger-running-and-breakpoints/
3.8	Using an integrated debugger: Watching variables	https://www.learncpp.com/cpp-tutorial/using-an-integrated-debugger-watching-variables/
3.9	Using an integrated debugger: The call stack	https://www.learncpp.com/cpp-tutorial/using-an-integrated-debugger-the-call-stack/
3.10	Finding issues before they become problems	https://www.learncpp.com/cpp-tutorial/finding-issues-before-they-become-problems/
3.x	Chapter 3 summary and quiz	https://www.learncpp.com/cpp-tutorial/chapter-3-summary-and-quiz/
4.1	Introduction to fundamental data types	https://www.learncpp.com/cpp-tutorial/introduction-to-fundamental-data-types/
4.2	Void	https://www.learncpp.com/cpp-tutorial/void/
4.3	Object sizes and the sizeof operator	https://www.learncpp.com/cpp-tutorial/object-sizes-and-the-sizeof-operator/
4.4	Signed integers	https://www.learncpp.com/cpp-tutorial/signed-integers/
4.5	Unsigned integers, and why to avoid them	https://www.learncpp.com/cpp-tutorial/unsigned-integers-and-why-to-avoid-them/
4.6	Fixed-width integers and size_t	https://www.learncpp.com/cpp-tutorial/fixed-width-integers-and-size-t/
4.7	Introduction to scientific notation	https://www.learncpp.com/cpp-tutorial/introduction-to-scientific-notation/
4.8	Floating point numbers	https://www.learncpp.com/cpp-tutorial/floating-point-numbers/
4.9	Boolean values	https://www.learncpp.com/cpp-tutorial/boolean-values/
4.10	Introduction to if statements	https://www.learncpp.com/cpp-tutorial/introduction-to-if-statements/
4.11	Chars	https://www.learncpp.com/cpp-tutorial/chars/
4.12	An introduction to std::string	https://www.learncpp.com/cpp-tutorial/an-introduction-to-stdstring/
4.13	Literals	https://www.learncpp.com/cpp-tutorial/literals/
4.14	Const, constexpr, and symbolic constants	https://www.learncpp.com/cpp-tutorial/const-constexpr-and-symbolic-constants/
4.x	Chapter 4 summary and quiz	https://www.learncpp.com/cpp-tutorial/chapter-4-summary-and-quiz/
5.1	Operator precedence and associativity	https://www.learncpp.com/cpp-tutorial/operator-precedence-and-associativity/
5.2	Arithmetic operators	https://www.learncpp.com/cpp-tutorial/arithmetic-operators/
5.3	Modulus and Exponentiation	https://www.learncpp.com/cpp-tutorial/5-3-modulus-and-exponentiation/
5.4	Increment/decrement operators, and side effects	https://www.learncpp.com/cpp-tutorial/increment-decrement-operators-and-side-effects/
5.5	Comma and conditional operators	https://www.learncpp.com/cpp-tutorial/comma-and-conditional-operators/
5.6	Relational operators and floating point comparisons	https://www.learncpp.com/cpp-tutorial/relational-operators-and-floating-point-comparisons/
5.7	Logical operators	https://www.learncpp.com/cpp-tutorial/logical-operators/
5.x	Chapter 5 summary and quiz	https://www.learncpp.com/cpp-tutorial/chapter-5-summary-and-quiz/
O.1	Bit flags and bit manipulation via std::bitset	https://www.learncpp.com/cpp-tutorial/o-1-bit-flags-and-bit-manipulation-via-stdbitset/
O.2	Bitwise operators	https://www.learncpp.com/cpp-tutorial/bitwise-operators/
O.3	Bit manipulation with bitwise operators and bit masks	https://www.learncpp.com/cpp-tutorial/bit-manipulation-with-bitwise-operators-and-bit-masks/
O.4	Converting between binary and decimal	https://www.learncpp.com/cpp-tutorial/converting-between-binary-and-decimal/
6.1	Compound statements (blocks)	https://www.learncpp.com/cpp-tutorial/compound-statements-blocks/
6.2	User-defined namespaces and the scope resolution operator	https://www.learncpp.com/cpp-tutorial/user-defined-namespaces-and-the-scope-resolution-operator/
6.3	Local variables	https://www.learncpp.com/cpp-tutorial/local-variables/
6.4	Introduction to global variables	https://www.learncpp.com/cpp-tutorial/introduction-to-global-variables/
6.5	Variable shadowing (name hiding)	https://www.learncpp.com/cpp-tutorial/variable-shadowing-name-hiding/
6.6	Internal linkage	https://www.learncpp.com/cpp-tutorial/internal-linkage/
6.7	External linkage	https://www.learncpp.com/cpp-tutorial/external-linkage/
6.8	Why (non-const) global variables are evil	https://www.learncpp.com/cpp-tutorial/why-non-const-global-variables-are-evil/
6.9	Sharing global constants across multiple files (using inline variables)	https://www.learncpp.com/cpp-tutorial/sharing-global-constants-across-multiple-files-using-inline-variables/
6.10	Static local variables	https://www.learncpp.com/cpp-tutorial/static-local-variables/
6.11	Scope, duration, and linkage summary	https://www.learncpp.com/cpp-tutorial/scope-duration-and-linkage-summary/
6.12	Using declarations and using directives	https://www.learncpp.com/cpp-tutorial/using-declarations-and-using-directives/
6.13	Unnamed and inline namespaces	https://www.learncpp.com/cpp-tutorial/unnamed-and-inline-namespaces/
6.x	Chapter 6 summary and quiz	https://www.learncpp.com/cpp-tutorial/chapter-6-summary-and-quiz/
7.1	Control flow introduction	https://www.learncpp.com/cpp-tutorial/control-flow-introduction/
7.2	If statements and blocks	https://www.learncpp.com/cpp-tutorial/if-statements-and-blocks/
7.3	Common if statement problems	https://www.learncpp.com/cpp-tutorial/common-if-statement-problems/
7.4	Switch statement basics	https://www.learncpp.com/cpp-tutorial/switch-statement-basics/
7.5	Switch fallthrough and scoping	https://www.learncpp.com/cpp-tutorial/switch-fallthrough-and-scoping/
7.6	Goto statements	https://www.learncpp.com/cpp-tutorial/goto-statements/
7.7	Intro to loops and while statements	https://www.learncpp.com/cpp-tutorial/intro-to-loops-and-while-statements/
7.8	Do while statements	https://www.learncpp.com/cpp-tutorial/do-while-statements/
7.9	For statements	https://www.learncpp.com/cpp-tutorial/for-statements/
7.10	Break and continue	https://www.learncpp.com/cpp-tutorial/break-and-continue/
7.11	Halts (exiting your program early)	https://www.learncpp.com/cpp-tutorial/halts-exiting-your-program-early/
7.12	Introduction to testing your code	https://www.learncpp.com/cpp-tutorial/introduction-to-testing-your-code/
7.13	Code coverage	https://www.learncpp.com/cpp-tutorial/code-coverage/
7.14	Common semantic errors in C++	https://www.learncpp.com/cpp-tutorial/common-semantic-errors-in-c/
7.15	Detecting and handling errors	https://www.learncpp.com/cpp-tutorial/detecting-and-handling-errors/
7.16	std::cin and handling invalid input	https://www.learncpp.com/cpp-tutorial/stdcin-and-handling-invalid-input/
7.17	Assert and static_assert	https://www.learncpp.com/cpp-tutorial/assert-and-static_assert/
7.x	Chapter 7 summary and quiz	https://www.learncpp.com/cpp-tutorial/chapter-7-comprehensive-quiz/
8.1	Implicit type conversion (coercion)	https://www.learncpp.com/cpp-tutorial/implicit-type-conversion-coercion/
8.2	Floating-point and integral promotion	https://www.learncpp.com/cpp-tutorial/floating-point-and-integral-promotion/
8.3	Numeric conversions	https://www.learncpp.com/cpp-tutorial/numeric-conversions/
8.4	Arithmetic conversions	https://www.learncpp.com/cpp-tutorial/arithmetic-conversions/
8.5	Explicit type conversion (casting) and static_cast	https://www.learncpp.com/cpp-tutorial/explicit-type-conversion-casting-and-static-cast/
8.6	Typedefs and type aliases	https://www.learncpp.com/cpp-tutorial/typedefs-and-type-aliases/
8.7	Type deduction for objects using the auto keyword	https://www.learncpp.com/cpp-tutorial/type-deduction-for-objects-using-the-auto-keyword/
8.8	Type deduction for functions	https://www.learncpp.com/cpp-tutorial/type-deduction-for-functions/
8.9	Introduction to function overloading	https://www.learncpp.com/cpp-tutorial/introduction-to-function-overloading/
8.10	Function overload differentiation	https://www.learncpp.com/cpp-tutorial/function-overload-differentiation/
8.11	Function overload resolution and ambiguous matches	https://www.learncpp.com/cpp-tutorial/function-overload-resolution-and-ambiguous-matches/
8.12	Default arguments	https://www.learncpp.com/cpp-tutorial/default-arguments/
8.13	Function templates	https://www.learncpp.com/cpp-tutorial/function-templates/
8.14	Function template instantiation	https://www.learncpp.com/cpp-tutorial/function-template-instantiation/
8.15	Function templates with multiple template types	https://www.learncpp.com/cpp-tutorial/function-templates-with-multiple-template-types/
8.x	Chapter 8 summary and quiz	https://www.learncpp.com/cpp-tutorial/chapter-8-summary-and-quiz/
9.1	Using a language reference	https://www.learncpp.com/cpp-tutorial/using-a-language-reference/
9.2	Enumerated types	https://www.learncpp.com/cpp-tutorial/enumerated-types/
9.3	Enum classes	https://www.learncpp.com/cpp-tutorial/enum-classes/
9.4	Structs	https://www.learncpp.com/cpp-tutorial/structs/
9.5	Random number generation	https://www.learncpp.com/cpp-tutorial/random-number-generation/
9.x	Chapter 9 summary and quiz	https://www.learncpp.com/cpp-tutorial/chapter-9-summary-and-quiz/
10.1	Arrays (Part I)	https://www.learncpp.com/cpp-tutorial/arrays-part-i/
10.2	Arrays (Part II)	https://www.learncpp.com/cpp-tutorial/arrays-part-ii/
10.3	Arrays and loops	https://www.learncpp.com/cpp-tutorial/arrays-and-loops/
10.4	Sorting an array using selection sort	https://www.learncpp.com/cpp-tutorial/sorting-an-array-using-selection-sort/
10.5	Multidimensional Arrays	https://www.learncpp.com/cpp-tutorial/multidimensional-arrays/
10.6	C-style strings	https://www.learncpp.com/cpp-tutorial/c-style-strings/
10.7	An introduction to std::string_view	https://www.learncpp.com/cpp-tutorial/an-introduction-to-stdstring_view/
10.8	Introduction to pointers	https://www.learncpp.com/cpp-tutorial/introduction-to-pointers/
10.9	Null pointers	https://www.learncpp.com/cpp-tutorial/null-pointers/
10.10	Pointers and arrays	https://www.learncpp.com/cpp-tutorial/pointers-and-arrays/
10.11	Pointer arithmetic and array indexing	https://www.learncpp.com/cpp-tutorial/pointer-arithmetic-and-array-indexing/
10.12	C-style string symbolic constants	https://www.learncpp.com/cpp-tutorial/c-style-string-symbolic-constants/
10.13	Dynamic memory allocation with new and delete	https://www.learncpp.com/cpp-tutorial/dynamic-memory-allocation-with-new-and-delete/
10.14	Dynamically allocating arrays	https://www.learncpp.com/cpp-tutorial/dynamically-allocating-arrays/
10.15	Pointers and const	https://www.learncpp.com/cpp-tutorial/pointers-and-const/
10.16	Reference variables	https://www.learncpp.com/cpp-tutorial/references/
10.17	References and const	https://www.learncpp.com/cpp-tutorial/references-and-const/
10.18	Member selection with pointers and references	https://www.learncpp.com/cpp-tutorial/member-selection-with-pointers-and-references/
10.19	For-each loops	https://www.learncpp.com/cpp-tutorial/for-each-loops/
10.20	Void pointers	https://www.learncpp.com/cpp-tutorial/void-pointers/
10.21	Pointers to pointers and dynamic multidimensional arrays	https://www.learncpp.com/cpp-tutorial/pointers-to-pointers/
10.22	An introduction to std::array	https://www.learncpp.com/cpp-tutorial/an-introduction-to-stdarray/
10.23	An introduction to std::vector	https://www.learncpp.com/cpp-tutorial/an-introduction-to-stdvector/
10.24	Introduction to iterators	https://www.learncpp.com/cpp-tutorial/introduction-to-iterators/
10.25	Introduction to standard library algorithms	https://www.learncpp.com/cpp-tutorial/introduction-to-standard-library-algorithms/
10.x	Chapter 10 comprehensive quiz	https://www.learncpp.com/cpp-tutorial/chapter-10-comprehensive-quiz/
11.1	Function parameters and arguments	https://www.learncpp.com/cpp-tutorial/function-parameters-and-arguments/
11.2	Passing arguments by value	https://www.learncpp.com/cpp-tutorial/passing-arguments-by-value/
11.3	Passing arguments by reference	https://www.learncpp.com/cpp-tutorial/passing-arguments-by-reference/
11.4	Passing arguments by address	https://www.learncpp.com/cpp-tutorial/passing-arguments-by-address/
11.5	Returning values by value, reference, and address	https://www.learncpp.com/cpp-tutorial/returning-values-by-value-reference-and-address/
11.6	Inline functions	https://www.learncpp.com/cpp-tutorial/inline-functions/
11.7	Function Pointers	https://www.learncpp.com/cpp-tutorial/function-pointers/
11.8	The stack and the heap	https://www.learncpp.com/cpp-tutorial/the-stack-and-the-heap/
11.9	std::vector capacity and stack behavior	https://www.learncpp.com/cpp-tutorial/stdvector-capacity-and-stack-behavior/
11.10	Recursion	https://www.learncpp.com/cpp-tutorial/recursion/
11.11	Command line arguments	https://www.learncpp.com/cpp-tutorial/command-line-arguments/
11.12	Ellipsis (and why to avoid them)	https://www.learncpp.com/cpp-tutorial/ellipsis-and-why-to-avoid-them/
11.13	Introduction to lambdas (anonymous functions)	https://www.learncpp.com/cpp-tutorial/introduction-to-lambdas-anonymous-functions/
11.14	Lambda captures	https://www.learncpp.com/cpp-tutorial/lambda-captures/
11.x	Chapter 11 comprehensive quiz	https://www.learncpp.com/cpp-tutorial/chapter-11-comprehensive-quiz/
12.1	Welcome to object-oriented programming	https://www.learncpp.com/cpp-tutorial/welcome-to-object-oriented-programming/
12.2	Classes and class members	https://www.learncpp.com/cpp-tutorial/classes-and-class-members/
12.3	Public vs private access specifiers	https://www.learncpp.com/cpp-tutorial/public-vs-private-access-specifiers/
12.4	Access functions and encapsulation	https://www.learncpp.com/cpp-tutorial/access-functions-and-encapsulation/
12.5	Constructors	https://www.learncpp.com/cpp-tutorial/constructors/
12.6	Constructor member initializer lists	https://www.learncpp.com/cpp-tutorial/constructor-member-initializer-lists/
12.7	Non-static member initialization	https://www.learncpp.com/cpp-programming/non-static-member-initialization/
12.8	Overlapping and delegating constructors	https://www.learncpp.com/cpp-tutorial/overlapping-and-delegating-constructors/
12.9	Destructors	https://www.learncpp.com/cpp-tutorial/destructors/
12.10	The hidden “this” pointer	https://www.learncpp.com/cpp-tutorial/the-hidden-this-pointer/
12.11	Class code and header files	https://www.learncpp.com/cpp-tutorial/class-code-and-header-files/
12.12	Const class objects and member functions	https://www.learncpp.com/cpp-tutorial/const-class-objects-and-member-functions/
12.13	Static member variables	https://www.learncpp.com/cpp-tutorial/static-member-variables/
12.14	Static member functions	https://www.learncpp.com/cpp-tutorial/static-member-functions/
12.15	Friend functions and classes	https://www.learncpp.com/cpp-tutorial/friend-functions-and-classes/
12.16	Anonymous objects	https://www.learncpp.com/cpp-tutorial/anonymous-objects/
12.17	Nested types in classes	https://www.learncpp.com/cpp-tutorial/nested-types-in-classes/
12.18	Timing your code	https://www.learncpp.com/cpp-tutorial/timing-your-code/
12.x	Chapter 12 comprehensive quiz	https://www.learncpp.com/cpp-tutorial/chapter-12-comprehensive-quiz/
13.1	Introduction to operator overloading	https://www.learncpp.com/cpp-tutorial/introduction-to-operator-overloading/
13.2	Overloading the arithmetic operators using friend functions	https://www.learncpp.com/cpp-tutorial/overloading-the-arithmetic-operators-using-friend-functions/
13.3	Overloading operators using normal functions	https://www.learncpp.com/cpp-tutorial/overloading-operators-using-normal-functions/
13.4	Overloading the I/O operators	https://www.learncpp.com/cpp-tutorial/overloading-the-io-operators/
13.5	Overloading operators using member functions	https://www.learncpp.com/cpp-tutorial/overloading-operators-using-member-functions/
13.6	Overloading unary operators +, -, and !	https://www.learncpp.com/cpp-tutorial/overloading-unary-operators/
13.7	Overloading the comparison operators	https://www.learncpp.com/cpp-tutorial/overloading-the-comparison-operators/
13.8	Overloading the increment and decrement operators	https://www.learncpp.com/cpp-tutorial/overloading-the-increment-and-decrement-operators/
13.9	Overloading the subscript operator	https://www.learncpp.com/cpp-tutorial/overloading-the-subscript-operator/
13.10	Overloading the parenthesis operator	https://www.learncpp.com/cpp-tutorial/overloading-the-parenthesis-operator/
13.11	Overloading typecasts	https://www.learncpp.com/cpp-tutorial/overloading-typecasts/
13.12	The copy constructor	https://www.learncpp.com/cpp-tutorial/the-copy-constructor/
13.13	Copy initialization	https://www.learncpp.com/cpp-tutorial/copy-initialization/
13.14	Converting constructors, explicit, and delete	https://www.learncpp.com/cpp-tutorial/converting-constructors-explicit-and-delete/
13.15	Overloading the assignment operator	https://www.learncpp.com/cpp-tutorial/overloading-the-assignment-operator/
13.16	Shallow vs. deep copying	https://www.learncpp.com/cpp-tutorial/shallow-vs-deep-copying/
13.17	Overloading operators and function templates	https://www.learncpp.com/cpp-tutorial/overloading-operators-and-function-templates/
13.x	Chapter 13 comprehensive quiz	https://www.learncpp.com/cpp-tutorial/chapter-13-comprehensive-quiz/
16.1	Object relationships	https://www.learncpp.com/cpp-tutorial/object-relationships/
16.2	Composition	https://www.learncpp.com/cpp-tutorial/composition/
16.3	Aggregation	https://www.learncpp.com/cpp-tutorial/aggregation/
16.4	Association	https://www.learncpp.com/cpp-tutorial/association/
16.5	Dependencies	https://www.learncpp.com/cpp-tutorial/dependencies/
16.6	Container classes	https://www.learncpp.com/cpp-tutorial/container-classes/
16.7	std::initializer_list	https://www.learncpp.com/cpp-tutorial/stdinitializer_list/
16.x	Chapter 16 comprehensive quiz	https://www.learncpp.com/cpp-tutorial/chapter-16-comprehensive-quiz/
17.1	Introduction to inheritance	https://www.learncpp.com/cpp-tutorial/introduction-to-inheritance/
17.2	Basic inheritance in C++	https://www.learncpp.com/cpp-tutorial/basic-inheritance-in-c/
17.3	Order of construction of derived classes	https://www.learncpp.com/cpp-tutorial/order-of-construction-of-derived-classes/
17.4	Constructors and initialization of derived classes	https://www.learncpp.com/cpp-tutorial/constructors-and-initialization-of-derived-classes/
17.5	Inheritance and access specifiers	https://www.learncpp.com/cpp-tutorial/inheritance-and-access-specifiers/
17.6	Adding new functionality to a derived class	https://www.learncpp.com/cpp-tutorial/adding-new-functionality-to-a-derived-class/
17.7	Calling inherited functions and overriding behavior	https://www.learncpp.com/cpp-tutorial/calling-inherited-functions-and-overriding-behavior/
17.8	Hiding inherited functionality	https://www.learncpp.com/cpp-tutorial/hiding-inherited-functionality/
17.9	Multiple inheritance	https://www.learncpp.com/cpp-tutorial/multiple-inheritance/
17.x	Chapter 17 comprehensive quiz	https://www.learncpp.com/cpp-tutorial/chapter-17-comprehensive-quiz/
18.1	Pointers and references to the base class of derived objects	https://www.learncpp.com/cpp-tutorial/pointers-and-references-to-the-base-class-of-derived-objects/
18.2	Virtual functions and polymorphism	https://www.learncpp.com/cpp-tutorial/virtual-functions/
18.3	The override and final specifiers, and covariant return types	https://www.learncpp.com/cpp-tutorial/the-override-and-final-specifiers-and-covariant-return-types/
18.4	Virtual destructors, virtual assignment, and overriding virtualization	https://www.learncpp.com/cpp-tutorial/virtual-destructors-virtual-assignment-and-overriding-virtualization/
18.5	Early binding and late binding	https://www.learncpp.com/cpp-tutorial/early-binding-and-late-binding/
18.6	The virtual table	https://www.learncpp.com/cpp-tutorial/the-virtual-table/
18.7	Pure virtual functions, abstract base classes, and interface classes	https://www.learncpp.com/cpp-tutorial/pure-virtual-functions-abstract-base-classes-and-interface-classes/
18.8	Virtual base classes	https://www.learncpp.com/cpp-tutorial/virtual-base-classes/
18.9	Object slicing	https://www.learncpp.com/cpp-tutorial/object-slicing/
18.10	Dynamic casting	https://www.learncpp.com/cpp-tutorial/dynamic-casting/
18.11	Printing inherited classes using operator<<	https://www.learncpp.com/cpp-tutorial/printing-inherited-classes-using-operator/
18.x	Chapter 18 comprehensive quiz	https://www.learncpp.com/cpp-tutorial/chapter-18-comprehensive-quiz/
19.1	Template classes	https://www.learncpp.com/cpp-tutorial/template-classes/
19.2	Template non-type parameters	https://www.learncpp.com/cpp-tutorial/template-non-type-parameters/
19.3	Function template specialization	https://www.learncpp.com/cpp-tutorial/function-template-specialization/
19.4	Class template specialization	https://www.learncpp.com/cpp-tutorial/class-template-specialization/
19.5	Partial template specialization	https://www.learncpp.com/cpp-tutorial/partial-template-specialization/
19.6	Partial template specialization for pointers	https://www.learncpp.com/cpp-tutorial/partial-template-specialization-for-pointers/
19.x	Chapter 19 comprehensive quiz	https://www.learncpp.com/cpp-tutorial/chapter-19-comprehensive-quiz/
20.1	The need for exceptions	https://www.learncpp.com/cpp-tutorial/the-need-for-exceptions/
20.2	Basic exception handling	https://www.learncpp.com/cpp-tutorial/basic-exception-handling/
20.3	Exceptions, functions, and stack unwinding	https://www.learncpp.com/cpp-tutorial/exceptions-functions-and-stack-unwinding/
20.4	Uncaught exceptions and catch-all handlers	https://www.learncpp.com/cpp-tutorial/uncaught-exceptions-catch-all-handlers/
20.5	Exceptions, classes, and inheritance	https://www.learncpp.com/cpp-tutorial/exceptions-classes-and-inheritance/
20.6	Rethrowing exceptions	https://www.learncpp.com/cpp-tutorial/rethrowing-exceptions/
20.7	Function try blocks	https://www.learncpp.com/cpp-tutorial/function-try-blocks/
20.8	Exception dangers and downsides	https://www.learncpp.com/cpp-tutorial/exception-dangers-and-downsides/
20.9	Exception specifications and noexcept	https://www.learncpp.com/cpp-tutorial/exception-specifications-and-noexcept/
20.x	Chapter 20 comprehensive quiz	https://www.learncpp.com/cpp-tutorial/chapter-20-comprehensive-quiz/
M.1	Intro to smart pointers and move semantics	https://www.learncpp.com/cpp-tutorial/intro-to-smart-pointers-move-semantics/
M.2	R-value references	https://www.learncpp.com/cpp-tutorial/rvalue-references/
M.3	Move constructors and move assignment	https://www.learncpp.com/cpp-tutorial/move-constructors-and-move-assignment/
M.4	std::move	https://www.learncpp.com/cpp-tutorial/stdmove/
M.5	std::move_if_noexcept	https://www.learncpp.com/cpp-tutorial/stdmove_if_noexcept/
M.6	std::unique_ptr	https://www.learncpp.com/cpp-tutorial/stdunique_ptr/
M.7	std::shared_ptr	https://www.learncpp.com/cpp-tutorial/stdshared_ptr/
M.8	Circular dependency issues with std::shared_ptr, and std::weak_ptr	https://www.learncpp.com/cpp-tutorial/circular-dependency-issues-with-stdshared_ptr-and-stdweak_ptr/
M.x	Chapter M comprehensive review	https://www.learncpp.com/cpp-tutorial/chapter-m-comprehensive-review/
21.1	The Standard Library	https://www.learncpp.com/cpp-tutorial/the-standard-template-library-stl/
21.2	STL containers overview	https://www.learncpp.com/cpp-tutorial/stl-containers-overview/
21.3	STL iterators overview	https://www.learncpp.com/cpp-tutorial/stl-iterators-overview/
21.4	STL algorithms overview	https://www.learncpp.com/cpp-tutorial/stl-algorithms-overview/
22.1	std::string and std::wstring	https://www.learncpp.com/cpp-tutorial/stdstring-and-stdwstring/
22.2	std::string construction and destruction	https://www.learncpp.com/cpp-tutorial/stdstring-construction-and-destruction/
22.3	std::string length and capacity	https://www.learncpp.com/cpp-tutorial/stdstring-length-and-capacity/
22.4	std::string character access and conversion to C-style arrays	https://www.learncpp.com/cpp-tutorial/stdstring-character-access-and-conversion-to-c-style-arrays/
22.5	std::string assignment and swapping	https://www.learncpp.com/cpp-tutorial/stdstring-assignment-and-swapping/
22.6	std::string appending	https://www.learncpp.com/cpp-tutorial/stdstring-appending/
22.7	std::string inserting	https://www.learncpp.com/cpp-tutorial/stdstring-inserting/
23.1	Input and output (I/O) streams	https://www.learncpp.com/cpp-tutorial/input-and-output-io-streams/
23.2	Input with istream	https://www.learncpp.com/cpp-tutorial/input-with-istream/
23.3	Output with ostream and ios	https://www.learncpp.com/cpp-tutorial/output-with-ostream-and-ios/
23.4	Stream classes for strings	https://www.learncpp.com/cpp-tutorial/stream-classes-for-strings/
23.5	Stream states and input validation	https://www.learncpp.com/cpp-tutorial/stream-states-and-input-validation/
23.6	Basic file I/O	https://www.learncpp.com/cpp-tutorial/basic-file-io/
23.7	Random file I/O	https://www.learncpp.com/cpp-tutorial/random-file-io/
A.1	Static and dynamic libraries	https://www.learncpp.com/cpp-tutorial/a1-static-and-dynamic-libraries/
A.2	Using libraries with Visual Studio	https://www.learncpp.com/cpp-tutorial/a2-using-libraries-with-visual-studio-2005-express/
A.3	Using libraries with Code::Blocks	https://www.learncpp.com/cpp-tutorial/a3-using-libraries-with-codeblocks/
B.1	Introduction to C++11	https://www.learncpp.com/cpp-tutorial/b-1-introduction-to-c11/
B.2	Introduction to C++14	https://www.learncpp.com/cpp-tutorial/b-2-introduction-to-c14/
B.3	Introduction to C++17	https://www.learncpp.com/cpp-tutorial/b-3-introduction-to-c17/
B.4	Introduction to C++20	https://www.learncpp.com/cpp-tutorial/introduction-to-c20/
C.1	The end?	https://www.learncpp.com/cpp-tutorial/appendix-c-the-end/